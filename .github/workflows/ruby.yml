name: CI

on:
  push:
    branches: [development, master]
  pull_request:
    branches: [development, master]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.4.4'] #['2.7', '3.0'] # WARNING: this option use double billable time on Actions

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '16'
        cache: 'yarn'
        check-latest: true

    - name: Scan for common Rails security vulnerabilities using static analysis
      run: bundle exec brakeman --no-pager

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true

    - name: Run Rubocop linter
      run: bundle exec rubocop

  rspec:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true

      - name: Set Timezone to -3
        uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: 'America/Sao_Paulo'

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '16'
          cache: 'yarn'
          check-latest: true

      - name: Run migrations
        env:
          RAILS_ENV: test
          RUBYOPT: -W0
        run: |
          cp config/database.github.yml config/database.yml
          bundle exec rails db:reset db:setup db:migrate RAILS_ENV=test
          yarn install

      - name: Run unit tests with Rspec [backend]
        run: bundle exec rspec -fd

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/.resultset.json
